
# load modules
from DomainServices.SongService import SongService
import uuid
from typing import Dict, List
import datetime

from Domains.Playlist import Image, Playlist
from Domains.Song import Song, SongList


# definition
class PlaylistService:

    # 新規の空のプレイリストを作成する
    def createEmpty(self):

        # generate pl name
        now = datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=9))) # 日本時刻
        playlist_name = "playlist-" + now.strftime('%Y%m%d%H%M%S')  # yyyyMMddHHmmss形式で出力

        # set paramter
        playlist = Playlist(
            key=str(uuid.uuid4()), 
            playlistFileName=playlist_name,
            playlistTitle=playlist_name,
            playlistAuthor="aruru", # TO set server name is better.
            playlistDescription="This playlist is generated by discordbot-BSPlaylistManager.",
            image=Image(),
            songs=list()
            )

        # register db? (rdbms or file)
        # playlist
        #  - playlistmetainfo
        #  - playlistcontents
        
        # make file
        #  -> generate from db?

    # 既存の空のプレイリストを削除する
    def deleteEmpty(self):
        pass

    # 既存のプレイリストを削除する
    def deletePlaylist(self, keyword: str):
        playlist = self.search(keyword)
        # 空の場合はdeleteemptyを呼び出す。
        self.deleteEmpty()
        if len(playlist.songs) == 0:
            # delete
            pass
        else:
            # get backup?
            pass

    # キーワードに一致するプレイリストを検索して、そこに曲を追加する
    def add(self, keyword: str, url: str):
        playlist = self.search(keyword)
        songService = SongService()

    # キーワードに一致するプレイリストを検索する
    def search(self, keyword: str) -> Playlist:
        playlist = self.search(keyword)

    # キーワードに一致するプレイリストを検索して、曲をdeleteする
    def delete(self, keyword: str, url:str):
        playlist = self.search(keyword)

    # change info
    def changeInfo(self, keyword:str, info:str):
        playlist = self.search(keyword)

    # download
    def download(self, keyword:str):
        playlist = self.search(keyword)

    # download all
    def downloadAll(self):
        pass


class PlaylistListService:
    # 全てのプレイリストに関するサービス


    # 管理プレイリスト一覧を返す
    def show(self):
        pass

    # 全プレイリストのDLリンクを返す
    def download(self):
        pass
